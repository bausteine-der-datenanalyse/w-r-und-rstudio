{
  "hash": "d2e6dd1495d78ba64120eb252451b517",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Untersuchung einzelner Merkmale in R\"\n---\n\n\n::: {.cell}\n\n:::\n\n\n### Übersicht Dataframes für diese Folien\n\n[]{.down100}\n\n| Name                | Inhalt                                           |\n|---------------------|--------------------------------------------------|\n| d_wb_all            | Weltbank - Alle Länder, alle Jahre               |\n| d_wb_2012           | Wie `d_wb_all`, aber nur für das Jahr 2012       |\n| d_wb_countries      | Wie `d_wb_all`, aber nur ausgewählte Länder      |\n| d_wb_countries_2012 | Wie `d_wb_countries`, aber nur für das Jahr 2012 |\n| d_ns_bochum_tag     | Tageswerte für Niederschläge in Bochum           |\n| d_ns_bochum_monat   | Monatswerte für Niederschläge in Bochum          |\n\nQuellen: <https://data.worldbank.org> und <https://www.dwd.de>\n\n\n## Werte plotten mit `geom_col()`\n\ncol wie column = Säule → Säulendiagramm\n\n### Beispieldatensatz\n\n::::: columns\n::: {.column width=\"65%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- tibble(\n  A=c(\"X\", \"Y\", \"X\", \"Z\", \"Z\", \"X\"), \n  B=c(1.5, 5.0, 4.5, 2.0, 1.0, 2.0),\n  C=c(\"U\", \"V\", \"V\", \"W\", \"V\", \"W\")\n)\n```\n:::\n\n:::\n\n::: {.column width=\"35%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nkable(d)\n```\n\n::: {.cell-output-display}\n\n\n|A  |   B|C  |\n|:--|---:|:--|\n|X  | 1.5|U  |\n|Y  | 5.0|V  |\n|X  | 4.5|V  |\n|Z  | 2.0|W  |\n|Z  | 1.0|V  |\n|X  | 2.0|W  |\n\n\n:::\n:::\n\n:::\n:::::\n\n- Mit `tibble` auf die Schnelle einen Dataframe erzeugen\n- Werte für ein Merkmal mit `c(...)` kombinieren\n- Zeichenketten in Hochkommata eingeben (ob `\"so\"` oder `'so'` ist egal)\n- Mit `<-` wird der Dataframe der Variablen `d` zugewiesen\n\n### Minimalbeispiel\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d) + \n  geom_col(mapping=aes(x=A, y=B))\n```\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n- Höhe der Säule aus **Summe** der Werte von Merkmal B\n\n### Füllfarbe nach drittem Merkmal\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d) + \n  geom_col(mapping=aes(x=A, y=B, fill=C))\n```\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n- Mit `fill=<M>` Merkmal für Füllfarbe angeben\n\n### Nebeneinander\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d) + \n  geom_col(mapping=aes(x=A, y=B, fill=C), position=\"dodge\")\n```\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n- Nebeneinander anordnen mit `position=\"dodge\"`\n\n### Als Balkendiagramm\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d) + \n  geom_col(mapping=aes(x=A, y=B, fill=C)) + coord_flip()\n```\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n- Mit `coord_flip()` Koordinatenachsen vertauschen\n\n### Mit *echten* Daten...\n\n### Treibhausgasemissionen (2012)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d_wb_countries_2012) + \n  geom_col(mapping=aes(x=country, y=gge))\n```\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n- Zur Erinnerung: `gge` steht für Greenhouse Gas Emissions\n\n### Treibhausgasemissionen bunt (2012)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d_wb_countries_2012) + \n  geom_col(mapping=aes(x=country, y=gge, fill=region))\n```\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n- Nach Weltregion eingefärbt\n\n### Treibhausgasemissionen pro Kopf (2012)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d_wb_countries_2012) + \n  geom_col(mapping=aes(x=country, y=gge / pop, fill=region))\n```\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n- Rechnen mit Merkmalen: `y=gge / pop`\n\n### Treibhausgasemissionen über die Zeit\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d_wb_countries) +\n  geom_col(mapping=aes(x=year, y=gge, fill=country))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 128 rows containing missing values or values outside the scale range\n(`geom_col()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n- Jahreszahl für x-Achse\n\n### Treibhausgasemissionen über die Zeit pro Kopf\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d_wb_countries) +\n  geom_col(mapping=aes(x=year, y=gge / pop, fill=country))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 128 rows containing missing values or values outside the scale range\n(`geom_col()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n- Rechnen mit Merkmalen: `y=gge / pop`\n\n### Treibhausgasemissionen anteilig\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d_wb_countries) +\n  geom_col(mapping=aes(x=year, y=gge, fill=country), position=\"fill\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 128 rows containing missing values or values outside the scale range\n(`geom_col()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n- Selbe Höhe für alle Balken mit `position=\"fill\"` $\\rightarrow$ Anteile ablesbar\n\n### Ring- und Kreisdiagramme...\n\n### 1. Schritt: Eine Säule mit Füllfarbe\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d_wb_countries_2012) + \n  geom_col(mapping=aes(x=0, y=pop, fill=country))\n```\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n- x-Wert fest, Höhe nach Merkmal B, Füllfarbe nach Merkmal A\n\n### 2. Schritt: Bereich auf der x-Achse\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d_wb_countries_2012) + geom_col(mapping=aes(x=0, y=pop, fill=country)) +\n  scale_x_continuous(limits=c(-1.5, 0.5))\n```\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n- Skalen besprechen wir noch ausführlicher\n\n### 3. Schritt: Koordinatentransformation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d_wb_countries_2012) + geom_col(mapping=aes(x=0, y=pop, fill=country)) +\n  scale_x_continuous(limits=c(-1.5, 0.5)) + coord_polar(theta=\"y\")\n```\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n- y-Koordinate wird für den Winkel verwendet\n\n### Kreisdiagramm\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d_wb_countries_2012) + geom_col(mapping=aes(x=0, y=pop, fill=country)) +\n  coord_polar(theta=\"y\")\n```\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n- Wie Ringdiagramm, aber kein Bereich für x-Werte vorgeben\n\n### Ohne Schnickschnack\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d_wb_countries_2012) + geom_col(mapping=aes(x=0, y=pop, fill=country)) +\n  coord_polar(theta=\"y\") + theme_void()\n```\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n- Themes behandeln wir noch ausführlich\n\n## 2. Häufigkeitsverteilungen mit `geom_bar()`\n\nWie `geom_col()` aber mit Zählung\n\n- bar wie Balken → Balkendiagramm\n\n### Beispieldatensatz\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- tibble(farbe=c(\"rot\", \"gruen\", \"blau\", \"gruen\", \"rot\", \"gruen\"))\n\nkable(d)\n```\n\n::: {.cell-output-display}\n\n\n|farbe |\n|:-----|\n|rot   |\n|gruen |\n|blau  |\n|gruen |\n|rot   |\n|gruen |\n\n\n:::\n:::\n\n\n### Minimalbeispiel\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d) + geom_bar(mapping=aes(x=farbe))\n```\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n- Wie funktioniert das? Mit einer statistischen Transformation!\n\n### Statistische Transformation\n\n![](bilder/geom_bar_transformation.svg)\n\n#### Funktionsweise\n\n- Daten werden vor dem Plotten transformiert\n- Dabei wird eine neue Tabelle erzeugt\n- Voreingestellte statistische Transformation für `geom_bar`: Zählen\n- Transformierte Daten werden geplottet\n\n### Mit *echten* Daten...\n\n### Anzahl der Länder pro Region\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d_wb_2012) + geom_bar(mapping=aes(x=region))\n```\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n- Funktioniert, weil jedes Land genau einmal in Dataframe\n\n### Anzahl der Länder pro Region\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d_wb_2012) + geom_bar(mapping=aes(x=region, fill=region))\n```\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n- Balken nach Region eingefärbt (redundant mit Achsenbeschriftung)\n\n## Histogramme mit `geom_histogram()`\n\n### Beispieldatensatz\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- tibble(X=c(0, 0.5, 0.6, 0.8, 1.3, 1.4, 1.5, 1.6, 1.9, 2.5, 2.6, 2.7))\n\nggplot(data=d) + geom_point(mapping=aes(x=X), y=0, color='red')\n```\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n### Histogramm\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d) + \n  geom_histogram(mapping=aes(x=X)) +\n  geom_point(mapping=aes(x=X), y=0, color='red')\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n- Hinweis vom Programm: Voreinstellung nicht gut\n\n### Hilfetext zu geom_histogram\n\n![Aus der Dokumentation zu geom_histogram](bilder/geom_histogram_doc.png)\n\n### Klassenbreite mit `binwidth=0.5`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d) + \n  geom_histogram(mapping=aes(x=X), binwidth=0.5) +\n  geom_point(mapping=aes(x=X), y=0, color='red')\n```\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n### Position mit `boundary=0`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d) + \n  geom_histogram(mapping=aes(x=X), binwidth=0.5, boundary=0) +\n  geom_point(mapping=aes(x=X), y=0, color='red')\n```\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n- Voreinstellung: Intervalle sind linksoffen (erstes Intervall geschlossen)\n\n### Rechtsoffene Intervalle mit `closed=\"left\"`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d) + \n  geom_histogram(mapping=aes(x=X), binwidth=0.5, boundary=0, closed=\"left\") +\n  geom_point(mapping=aes(x=X), y=0, color='red')\n```\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n### Relative Häufigkeiten mit `y=after_stat(density)`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d) + \n  geom_histogram(mapping=aes(x=X, y=after_stat(density)), binwidth=0.5, boundary=0, closed=\"left\") +\n  geom_point(mapping=aes(x=X), y=0, color='red')\n```\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\n### Unterschiedliche Klassengrößen mit `breaks=c(...)`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d) + \n  geom_histogram(mapping=aes(x=X,y=stat(density)), breaks=c(0, 1, 1.5, 1.75, 4)) +\n  geom_point(mapping=aes(x=X), y=0, color='red')\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: `stat(density)` was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(density)` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n- Prinzip der Flächentreue\n\n### Mit *echten* Daten...\n\n### Niederschläge (Tag) in Bochum\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d_ns_bochum_tag) + \n  geom_histogram(mapping=aes(x=Niederschlag), binwidth=0.5, boundary=0)\n```\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n\n### Niederschläge (Monat) in Bochum\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d_ns_bochum_monat) + \n  geom_histogram(mapping=aes(x=Niederschlag), binwidth=15, boundary=0)\n```\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n\n- Klassenbreite mit `binwidth=w`, Klassengrenze mit `boundary=b`\n- hier zu sehen: eine unimodale, linkssteile Verteilung\n\n### Niederschläge (Monat) in Bochum\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d_ns_bochum_monat) + \n  geom_histogram(mapping=aes(x=Niederschlag, y=stat(density)), binwidth=15, boundary=0)\n```\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n\n- Relative Häufigkeiten mit `y=stat(density)`\n\n### Niederschläge (Monat) in Bochum\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d_ns_bochum_monat) + \n  geom_histogram(mapping=aes(x=Niederschlag, fill=Monat), binwidth=15, boundary=0)\n```\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n\n- Nach Monaten eingefärbt\n\n## Verteilungsfunktionen mit `geom_step()` und Transformation\n\n- step wie Stufe → Stufendiagramm\n\n### Minimalbeispiel `geom_step()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=tibble(X=c(0, 1, 3), Y=c(2, 1, 3))) +\n  geom_step(mapping=aes(x=X, y=Y)) +\n  geom_point(mapping=aes(x=X, y=Y), color='red')\n```\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n:::\n\n\n### Beispieldaten\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- tibble(X=c(0.1, 0.3, 0.2, 0.6, 0.3, 0.9, 1.2, 0.3, 0.6, 0.3),\n            Y=c(\"a\", \"b\", \"a\", \"a\", \"b\", \"b\", \"a\", \"b\", \"a\", \"b\"))\nggplot(data=d) + geom_bar(mapping=aes(x=X))\n```\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n\n### Empirische Verteilungsfunktion\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d) + \n  geom_step(mapping=aes(x=X), stat=\"ecdf\")\n```\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n:::\n\n\n- `stat=\"ecdf\"` meint *Empirical Cumulative Densitiy Function*\n\n### Empirische Verteilungsfunktion getrennt\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d) + \n  geom_step(mapping=aes(x=X, color=Y), stat=\"ecdf\")\n```\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n:::\n\n\n- Kurven entsprechend Merkmal `Y`\n\n### Absolute kumulierte Häufigkeitsverteilung\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d) + \n  geom_step(mapping=aes(x=X, y=nrow(d) * stat(y)), stat=\"ecdf\")\n```\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-38-1.png){width=672}\n:::\n:::\n\n\n- In ggplot nicht vorgesehen und daher kompliziert (später)\n\n### Mit *echten* Daten...\n\n### Monatliche Niederschläge\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d_ns_bochum_monat) +\n  geom_step(mapping=aes(x=Niederschlag), stat=\"ecdf\")\n```\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n:::\n\n\n- So gut wie kein Monat ohne Regen\n\n### Tägliche Niederschläge\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d_ns_bochum_tag) +\n  geom_step(mapping=aes(x=Niederschlag), stat=\"ecdf\")\n```\n\n::: {.cell-output-display}\n![](einzelne-merkmale_files/figure-html/unnamed-chunk-40-1.png){width=672}\n:::\n:::\n\n\n- Warum ganz anders als für die monatlichen Niederschläge?\n\n## Zusammenfassung\n\n### Werte darstellen mit `geom_col()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d) +\n  geom_col(mapping=aes(x=<M>, y=<M>, fill=<M>, color=<M>), Parameter)\n```\n:::\n\n\n| Aesthetics   | Beschreibung                       | Optional           |\n|--------------|------------------------------------|--------------------|\n| `x`          | Merkmal für x-Position             | Nein               |\n| `y`          | Merkmal für Höhe der Balken        | Nein               |\n| `fill`       | Merkmal für Füllfarbe              | Ja                 |\n| `color`      | Merkmal für Linienfarbe            | Ja                 |\n\n: {tbl-colwidths=\"[20,50,30]\"}\n\n| Parameter    | Beschreibung                                            |\n|--------------|---------------------------------------------------------|\n| `position`   | Gesamte y-Achse mit `position=\"fill\"`                   |\n|              | Balken nebeneinander mit `position=\"dodge\"`             |\n\n: {tbl-colwidths=\"[20,80]\"}\n\n### Zählen und darstellen mit `geom_bar()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d) +\n  geom_bar(mapping=aes(x=<M>, fill=<M>, color=<M>), Parameter)\n```\n:::\n\n\n| Aesthetics   | Beschreibung                       | Optional           |\n|--------------|------------------------------------|--------------------|\n| `x`          | Merkmal für x-Achse (wird gezählt) | Nein               |\n| `fill`       | Füllfarbe                          | Ja                 |\n| `color`      | Linienfarbe                        | Ja                 |\n\n: {tbl-colwidths=\"[20,50,30]\"}\n\n| Parameter    | Beschreibung                                            |\n|--------------|---------------------------------------------------------|\n| `position`   | Gesamte y-Achse mit `position=\"fill\"`                   |\n|              | Balken nebeneinander mit `position=\"dodge\"`             |\n\n: {tbl-colwidths=\"[20,80]\"}\n\n$\\rightarrow$ Wie `geom_col` aber ohne y\n\n### Histogramme mit `geom_histogram()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d) +\n  geom_histogram(mapping=aes(x=<M>,y=stat(density),fill=<M>), Parameter)\n```\n:::\n\n\n| Aesthetics   | Beschreibung                                 | Optional |\n|--------------|----------------------------------------------|----------|\n| `x`          | Merkmal, das gezählt werden soll             | Nein     |\n| `y`          | Relative Häufigkeiten mit `y=stat(density))` | Ja       |\n| `fill`       | Merkmal für Füllfarbe                        | Ja       |\n\n: {tbl-colwidths=\"[20,50,30]\"}\n\n| Parameter    | Beschreibung                                            |\n|--------------|---------------------------------------------------------|\n| `bins`       | Anzahl der Klassen                                      |\n| `binwidth`   | Klassenbreite                                           |\n| `center`     | Mitte einer Klasse                                      |\n| `boundary`   | Grenze zwischen zwei Klassen                            |\n| `breaks`     | Klassengrenzen                                          |\n| `closed`     | Intervalle geschlossen (\"left\" oder \"right\")            |\n\n: {tbl-colwidths=\"[20,80]\"}\n\n### Empirische Verteilungsfunktion mit `geom_step()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d) +\n  geom_step(mapping=aes(x=<M>, color=<M>), stat=\"ecdf\")\n```\n:::\n\n\n| Aesthetics   | Beschreibung                                 | Optional |\n|--------------|----------------------------------------------|----------|\n| `x`          | Merkmal für empirische Verteilungsfunktion   | Nein     |\n| `color`      | Merkmal für Farbe                            | Ja       |\n\n: {tbl-colwidths=\"[20,50,30]\"}\n",
    "supporting": [
      "einzelne-merkmale_files\\figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}