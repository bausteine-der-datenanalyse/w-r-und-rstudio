{
  "hash": "75201ae1f1a3d17978a963cf101c88aa",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Weitere Geoms und Aufbereiten von Plots\"\n---\n\n\n::: {.cell}\n\n:::\n\n\n# Linienplots mit `geom_line()`\n\n## Minimalbeispiel `geom_line()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- tibble(A = c(1, 2, 3, 5), B = c(2, 6, 4, 4.5))\nggplot(data = d) + geom_line(mapping = aes(x = A, y = B))\n```\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n- `geom_line()` funktioniert im Prinzip genau wie `geom_point()`\n\n## BIP Länder (erster Versuch) {}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d_wb_countries) + \n  geom_line(mapping = aes(x = year, y = gdp))\n```\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n- Nicht klar, dass nur Punkte derselben Länder verbunden werden sollen!\n\n## BIP Länder (zweiter Versuch) \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d_wb_countries) + \n  geom_line(mapping = aes(x = year, y = gdp, group = country))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 64 rows containing missing values or values outside the scale range\n(`geom_line()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n- Mit `group = <M>` angegeben, welche Punkte zusammengehören\n\n## BIP Länder (mit Farbe)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d_wb_countries) + \n  geom_line(mapping = aes(x = year, y = gdp, color = country, group = country))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 64 rows containing missing values or values outside the scale range\n(`geom_line()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n- Einfärben mit `color = c`\n\n## BIP Länder: Farbe und Population \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d_wb_countries) + geom_line(\n    mapping = aes(x = year, y = gdp, color = country, linewidth = pop), lineend = \"round\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 64 rows containing missing values or values outside the scale range\n(`geom_line()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n- `size = s` legt Linienstärke fest\n- `lineend = \"round\"` bei sehr dicken Linien\n\n# Was es sonst nocht gibt...\n\n## Liniensegmente mit `geom_segment()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d_wb_countries_2012) +\n  geom_segment(mapping = aes(x = 0, xend = pop, y = country, yend = country)) +\n  geom_point(mapping = aes(x = pop, y = country), color = \"red\")\n```\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n- Notwendige AES: `x`, `y`, `xend`, `yend`, auch mit festen Werten\n\n## Rechtecke mit `geom_tile()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- data.frame(X = c(0,1,3), Y = c(3,2,1), W = c(1,0.5,1), H = c(2,3,1))\nggplot(data = d) +\n  geom_tile(mapping = aes(x = X, y = Y, width = W, height = H)) +\n  geom_point(mapping = aes(x = X, y = Y), color = \"red\")\n```\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n[]{.up20}\n\n- Notwendige AES: Mittelpunkt und Breite/Höhe\n- tile wie Fliese\n\n## Rechtecke mit `geom_rect()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- data.frame(X1=c(0,1.5,3), Y1=c(2.5,2,1), X2=c(1,2.5,3.5), Y2=c(1,3,2))\nggplot(data = d) +\n  geom_rect(mapping = aes(xmin = X1, ymin = Y1, xmax = X2, ymax = Y2)) +\n  geom_point(mapping = aes(x = X1, y = Y1), color = \"red\") + geom_point(mapping = aes(x = X2, y = Y2), color = \"blue\")\n```\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n[]{.up20}\n\n- Notwendige AES: Koordinaten der Eckpunkte\n- rect wie rectangle = Rechteck\n\n# Plots aufbereiten\n\n## Facetten mit `facet_wrap`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = filter(d_ns_bochum_tag, Jahr %in% 2014:2017)) +\n  geom_boxplot(mapping = aes(x = Monat, y = NS)) +\n  facet_wrap(~Jahr, ncol = 2)                                  \n```\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n- `facet_wrap(~Merkmal)`: Für jede Ausprägung des Merkmals ein Plot\n- facet wie Facette, Seite und wrap wie umbrechen\n- Anzahl der Zeilen (row) oder Spalten (col) mit `nrow = nr` oder `ncol =  nc` \n- Jahre 2014 - 2017 mit `filter()` (später, Verweis)\n\n## Sortierung nach Häufigkeit 1/3\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(d_wb_all) + geom_bar(mapping = aes(x = region))\n```\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n- Standardmäßig wird alphabetisch sortiert\n\n## Sortierung nach Häufigkeit 2/3\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(d_wb_all) + geom_bar(mapping = aes(x = fct_infreq(region)))\n```\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n- Nach Häufigkeit sortieren mit `fct_infreq()`\n- fct wie factor = Faktor und infreq wie in frequency order = der Häufigkeit nach sortiert\n\n## Sortierung nach Häufigkeit 3/3\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(d_wb_all) + geom_bar(mapping = aes(x = fct_rev(fct_infreq(region))))\n```\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n- Ansteigend mit `fct_rev()`\n- rev wie reverse = umgekehrt\n\n## Sortierung nach Merkmal 1/3\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(d_wb_countries) + geom_col(mapping = aes(x = country, y = pop))\n```\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n- Standardmäßig wird alphabetisch sortiert\n\n## Sortierung nach Merkmal 2/3\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(d_wb_countries) + geom_col(mapping = aes(x = fct_reorder(country, pop), y = pop))\n```\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n- Nach Merkmal sortieren mit `fct_reorder()`\n\n## Sortierung nach Merkmal 3/3\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(d_wb_countries) + geom_col(mapping = aes(x = fct_rev(fct_reorder(country, pop)), y = pop))\n```\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n- Absteigend sortieren wieder mit `fct_rev()`\n\n## Skalen\n\n::: {.columns}\n::: {.column width=70%}\n![](bilder/skalen.svg)\n:::\n::: {.column width=30%}\nSkalen regeln die Abbildung von Daten auf die Eigenschaften geometrischer Objekte (AES).\n:::\n:::\n\nForm der Angaben zu Skalen: `scale_AAA_BBB(<Arguments>)`\n\nAAA | BBB | Funktion\n-|-\nx,y | continuous, discrete | Koordinatenachsen konfigurieren\nx,y | reverse, sqrt, log10 | Koordinatenachsen transformieren\ncolor, fill | grey, hue, manual, brewer, ... | Farbe und Füllfarbe ändern\n\n##\n\n[]{.down120}\n\nDarüber hinaus gibt es Skalen für alle anderen visuellen Eigenschaften (Transparenz, Linientyp, Shape, ...). In der Regel muss man diese aber nicht anpassen.\n\n## Skalen werden automatisch eingefügt\n\nWerden keine Skalen angegeben (so wie bisher), dann fügt ggplot automatisch sinnvolle Skalen ein. Aus \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d_wb_all) + \n  geom_point(mapping = aes(x = year, y = gdp))\n```\n:::\n\n\nwird daher\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d_wb_all) + \n  geom_point(mapping = aes(x = year, y = gdp)) +\n  scale_x_continuous() + \n  scale_y_continuous()\n```\n:::\n\n\nSkalen anpassen: Selber dazuschreiben\n\n## Kontinuierliche Achsen: Achspunkte ändern\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d_wb_all) + geom_point(mapping = aes(x = year, y = gdp)) +\n  scale_x_continuous(breaks = c(1965, 1990, 2015))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 2915 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n- Änderung der Beschriftung mit `breaks = b`\n\n## Kontinuierliche Achsen: Möglichkeiten\n\n[]{.down40}\n\nArgument | Beschreibung\n-|-\nbreaks | Vektor mit Werten für Achspunkte\nminor_breaks | Vektor mit Werten für zwischen-Achspunkte\nlimits | Vektor mit zwei Elementen für Begrenzung\nlabels | Vektor mit Beschriftung (selten)\n\n[]{.down40}\n\n- Keine Punkte mit `breaks = NULL` bzw. `minor_breaks = NULL`\n- Durch `limits` werden die entsprechenden Daten vor dem Plotten entfernt (manchmal nicht erwünscht). Alternativ die Plotgrenzen bei `coord_cartesian()` angeben (gleich)\n\n## Diskrete Achsen: Beschriftung ändern\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d_wb_2012) + geom_bar(mapping = aes(x = region)) +\n  scale_x_discrete(labels = c(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\"))\n```\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n- Änderung der Beschriftung mit `labels = l`\n\n## Viele Werte nah am Ursprung\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d_wb_2012) +\n  geom_point(mapping = aes(x = gdp, y = gge, fill = region, size = pop), shape = 21)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 42 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n- Problem: Fast alle Werte liegen sehr nahe bei Null\n\n## Viele Werte nah am Ursprung: Logarithmische Skala\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d_wb_2012) +\n  geom_point(mapping = aes(x = gdp, y = gge, fill = region, size = pop), shape = 21) +\n  scale_x_log10() + scale_y_log10()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 42 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n- Bereich wird für kleine Werte aufgezogen, für große Werte komprimiert\n\n## Weitere Skalen für Achsen\n\n[]{.down60}\n\nElement | Wirkung\n-|-\nscale_x_sqrt(), scale_y_sqrt() | Wurzelskala\nscale_x_log10(), scale_y_log10() | Logarithmische Skala\nscale_x_reverse(), scale_y_reverse() | Umgedrehte Skala\n\n[]{.down40}\n\n→ Definitionsbereich von Logarithmus und Wurzel beachten\n\n## Kontinuierliche Farbskala\n\n[]{.down40}\n\nDatensatz: Sinuskurve\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- tibble(X = seq(0, 2, by=0.05), Y = sin(pi*seq(0, 2, by=0.05)))\n```\n:::\n\n\n## Beispiel (nicht empfohlen)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d) + geom_col(mapping = aes(x = X, y = Y, fill = Y)) +\n  scale_fill_gradient(low = \"green\", high = \"red\")\n```\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n- `scale_fill_gradient()` erzeugt Farbverlauf mit zwei Farben\n\n## Beispiel (auch nicht empfohlen)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d) + geom_col(mapping = aes(x = X, y = Y, fill = Y)) +\n  scale_fill_gradient2(low = \"orange\", mid = \"yellow\", high = \"green\")\n```\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n- `scale_fill_gradient2()` erzeugt Farbverlauf mit drei Farben\n\n## Brewer-Farbpalette (empfohlen)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d) + geom_col(mapping = aes(x = X, y = Y, fill = Y)) +\n  scale_fill_distiller(palette = \"RdBu\")\n```\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n- Farbpalette von Cynthia Brewer (gleich mehr dazu)\n\n## Farbskala umgekehrt\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d) + geom_col(mapping = aes(x = X, y = Y, fill = Y)) +\n  scale_fill_distiller(palette = \"RdBu\", direction = 1)\n```\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n- `direction = 1` zeigt die Skala so an, wie sie definiert ist, Voreinstellung ist umgedreht\n\n## Mit diskreten Farbwerten\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d) + geom_col(mapping = aes(x = X, y = Y, fill = Y)) +\n  scale_fill_fermenter(palette = \"RdBu\")\n```\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\n## Mit logarithmischer Skala\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=mutate(d,Y=Y^16+1e-9))+geom_col(mapping=aes(x=X, y=Y, fill=Y))+\n  scale_y_log10() + scale_fill_fermenter(palette = \"RdBu\", trans = \"log10\")\n```\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\n- Viele Werte sehr klein wegen Y^16. Daher: Logarithmische Skalen\n- Farben mit `trans = \"log10\"` dem Logarithmus der Werte zuordnen\n\n## Definierte Farbskalen (kontinuierlich)\n\n[]{.down40}\n\nElement | Argumente | Funktion\n-|-\nscale_AAA_gradient | low, high | Farbverlauf von low nach high\nscale_AAA_gradient2 | low, mid, high | Farbverlauf mit drei Farben\nscale_AAA_distiller | palette | Brewer-Farbpaletten\nscale_AAA_fermenter | palette | Brewer-Farbpaletten mit Klassen\n\n[]{.down40}\n\n→ Für AAA je nach Anwendung entweder 'color' oder 'fill' einsetzen\n\n## Optionen für alle kontinuierlichen Farbskalen\n\n[]{.down120}\n\nOption | Mögliche Werte | Funktion\n-|-|-\ndirection | 1, **-1** | Farbskala umkehren\nguide | **\"colourbar\"**, \"legend\" | Kontinuierliche Skala oder diskrete Farben\ntrans | **\"idendity\"**, \"log10\", ... | Transformation für Werte\n\n## Diskrete Farbskala manuell (erster Versuch)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- data.frame(farbe = c(\"rot\", \"gruen\", \"blau\", \"gruen\", \"rot\", \"gruen\"))\nggplot(data = d) + geom_bar(mapping = aes(x = farbe, fill = farbe)) +\n  scale_fill_manual(values = c(\"red\", \"blue\", \"green\"))\n```\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n\n- Zuordnung quasi zufällig\n\n## Diskrete Farbskala manuell (zweiter Versuch)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- data.frame(farbe = c(\"rot\", \"gruen\", \"blau\", \"gruen\", \"rot\", \"gruen\"))\nggplot(data = d) + geom_bar(mapping = aes(x = farbe, fill = farbe)) +\n  scale_fill_manual(values=c(\"rot\"=\"red\", \"blau\"=\"blue\", \"gruen\"=\"green\"))\n```\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n\n- Zuordnung mit `Ausprägung = Farbe` angeben\n\n## Brewer-Farbpalette\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d_wb_2012) + geom_bar(mapping = aes(x=region, fill=region)) +\n  scale_fill_brewer(palette = \"Set1\")\n```\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n\n## Brewer-Farbpaletten\n\n![](bilder/brewer.svg)\n\n- Kontinuierlich: `scale_color_distiller(palette = p)` oder `scale_fill_distiller(palette = p)`\n- Diskret: `scale_color_brewer(palette = p)` oder `scale_fill_brewer(palette = p)`\n\n## Brewer-Farbpaletten\n\n![](bilder/brewer-info.svg)\n\n[]{.down40}\n\n- Entwickelt von Cynthia Brewer\n- Kartographin an der Penn State Universität\n- http://colorbrewer2.org\n\n# Beschriftungen\n\n## Beschriftung mit labs() \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d_ns_bochum_monat) + \n  geom_histogram(mapping = aes(x = NS), binwidth = 15, boundary = 0) +\n  labs(                                               \n    title = \"Histogramm Niederschlag in Bochum\", subtitle = \"1951 - 2017\", \n    x = \"Monatlicher Niederschlag (mm)\", y = \"Anzahl der Monate\",\n    caption = \"Quelle: Deutscher Wetterdienst\"\n  )\n```\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n\n## Beschriftung der Farblegende\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d_wb_2012) + geom_bar(mapping = aes(x=region, fill=region)) +\n  labs(fill = \"Region der Welt\")\n```\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n:::\n\n\n- Legende ebenfalls mit `labs` beschriften\n- Zum Beispiel für die Füllfarbe: `fill = Titel`\n\n## Beschriftung entfernen\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = filter(d_ns_bochum_monat, Jahr >= 2000)) +\n  geom_boxplot(mapping = aes(x = factor(Jahr), y = NS)) +\n  labs(x = NULL, y = NULL)\n```\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n\n- Wert `NULL` entfernt die Beschriftung und den dafür reservierten Platz\n\n## Beschriftung drehen\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  ggplot(data = d_wb_2012) + geom_bar(mapping = aes(x=region, fill=region)) +\n    guides(x = guide_axis(angle = 45))\n```\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n:::\n\n\n[]{.down20}\n\n- Erste Möglichkeit, wenn Beschriftungen auf x-Achse zu lang\n- Geschmackssache\n\n## Beschriftung versetzen\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  ggplot(data = d_wb_2012) + geom_bar(mapping = aes(x=region, fill=region)) +\n    guides(x = guide_axis(n.dodge = 3))\n```\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n:::\n\n\n[]{.down20}\n\n- Zweite Möglichkeit, wenn Beschriftungen auf x-Achse zu lang\n- Auch Geschmackssache\n\n# Koordinatensysteme\n\n## Achsen vertauschen mit `coord_flip()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d_wb_2012) + geom_bar(mapping = aes(x=region, fill=region)) +\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-38-1.png){width=90%}\n:::\n:::\n\n\n- Vertauscht die x-Achse mit der y-Achse\n\n## Plotbereich mit `coord_cartesian()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d_wb_countries) + \n  geom_ribbon(mapping = aes(x=year, ymin=0, ymax=gdp, color=country, fill=country), alpha = 1/3) +\n  coord_cartesian(xlim = c(1980, 2010), ylim = c(0, 4e12))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 74 rows containing missing values or values outside the scale range\n(`geom_ribbon()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n:::\n\n\n- Bereich festlegen: `xlim = c(xmin, xmax)` und `ylim = c(ymin, ymax)`\n\n## Polarkoordinaten mit `coord_polar()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d_wb_countries) + \n  geom_ribbon(mapping = aes(x=year, ymin=0, ymax=gdp, color=country, fill=country), alpha = 1/3) +\n  coord_polar(theta = \"y\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 74 rows containing missing values or values outside the scale range\n(`geom_ribbon()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-40-1.png){width=672}\n:::\n:::\n\n\n- Ein Wert wird zum Radius, der andere zum Winkel\n- Variable (`\"x\"` oder `\"y\"`) für Winkel mit `theta` \n\n## Tortendiagramm (Wiederholung)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d_wb_countries_2012) +\n  geom_col(mapping = aes(x = 0, y = gge, fill = country), color = \"black\", width = 1) +\n  coord_polar(theta = \"y\") + theme_void()\n```\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-41-1.png){width=672}\n:::\n:::\n\n\n- Gestapeltes Balkendiagramm wird zum Tortendiagramm\n- `theme_void()` entfernt Dekoration (gleich)\n\n## Ringdiagramm (Wiederholung)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d_wb_countries_2012) +\n  geom_col(mapping=aes(x = 0.5, y = gge, fill = country), color = \"black\", width = 1) +\n  scale_x_continuous(limits = c(-1, 1)) + coord_polar(theta = \"y\") + theme_void() \n```\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-42-1.png){width=672}\n:::\n:::\n\n\n- Bereich der x-Achse anpassen\n- `theme_void()` entfernt Dekoration (gleich)\n\n# Themes\n\nVoreinstellungen für Graphiken anpassen\n\n## Erscheinungsbild anpassen mit `theme()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  ggplot(data = d_wb_2012) + geom_bar(mapping = aes(x=region, fill=region)) +\n    theme(\n      panel.background = element_rect(fill = \"pink\"), \n      panel.grid.major = element_line(color = \"hot pink\")\n    )\n```\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-43-1.png){width=672}\n:::\n:::\n\n  \n- Alle Plot-Elemente lassen sich mithilfe von `theme()` anpassen\n- Insgesamt ca. 80 Einstellungsmöglichkeiten\n- Tipp: Nicht zuviel Zeit damit verbringen\n  \n## Voreingestellte Themes\n\n\n::: {.columns}\n::: {.column width=40%}\n[]{.up20}\n![](bilder/visualization-themes.svg)\n:::\n::: {.column width=60%}\n- Vernünftige Voreinstellungen\n- `theme_void()` entfernt alles\n- Weitere Themes im Paket `ggthemes`\n:::\n:::\n\n[]{.up40}\n\nGlobale Einstellungen zu Beginn des Dokuments. Beispiel:\n\n```{.r}\ntheme_set(theme_bw())\n```\n\n# Farben ändern\n\nNicht allen gefallen die grauen Balken...\n\n## Farben für einzelnen Plot setzen\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d_ns_bochum_monat) + \n  geom_histogram(mapping = aes(x = NS), fill = \"orange\", color = \"black\")\n```\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-44-1.png){width=672}\n:::\n:::\n\n\nProblem: Viel Arbeit, wenn die Plots einheitlich aussehen sollen\n\n## Besser: Voreinstellungen global ändern\n\n[]{.down40}\n\n```{.r}\nline_color <- \"black\"\nfill_color <- \"light blue\"\nupdate_geom_defaults(\"bar\",   list(fill = fill_color, color = line_color))\nupdate_geom_defaults(\"point\", list(fill = fill_color, color = line_color))\nupdate_geom_defaults(\"boxplot\", list(fill = fill_color))\n\n# und so weiter\n```\n\n[]{.down40}\n\n- Einstellungen für alle Plots zu Beginn des Dokuments\n- Lässt sich später einfach ändern\n\n## Farben angeben\n\nMit dem Namen einer Farbe\n\n- Zum Beispiel `\"red\"` (mehr als 600 vordefinierte Farben)\n- `colors()` gibt Namen der vordefinierten Farben\n- http://sape.inf.usi.ch/quick-reference/ggplot2/colour\n\nMit RGB-Wert\n\n- Zum Beispiel `rgb(0, 0.7, 1)`\n\nMit Hex-Wert\n\n- Zum Beispiel `\"#45e32f\"`\n- Farben in R standardmäßig als Hexadezimalzahl\n\n# Legenden entfernen\n\n## Methode 1: Legende für einzelne Skala\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d_wb_2012) +\n  geom_point(mapping = aes(x=gdp, y=gge, color=region, size=pop)) +\n  scale_x_log10() + scale_y_log10() +\n  scale_size(guide = \"none\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 42 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-45-1.png){width=672}\n:::\n:::\n\n\n- Argument `guide = \"none\"` für die Skala\n- Farbskala entfernen mit `scale_color_discrete(guide = \"none\" (PRÜFEN!!))`\n\n## Methode 2: Alle Legenden für ein Geom\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d_wb_2012) +\n  geom_point(mapping=aes(x=gdp, y=gge, color=region, size=pop), \n    show.legend = FALSE) +\n  scale_x_log10() + scale_y_log10()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 42 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](weitere-geoms_files/figure-html/unnamed-chunk-46-1.png){width=672}\n:::\n:::\n\n\n- Argument `show.legend = FALSE` entfernt alle Legenden für ein Geom\n\n",
    "supporting": [
      "weitere-geoms_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}