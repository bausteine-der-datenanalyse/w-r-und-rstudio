{
  "hash": "817ecaccda85f3257e920da44652f265",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Kenngrößen und Beschreibung von Verteilungen in R\"\n---\n\n\n::: {.cell}\n\n:::\n\n\n\n## Übersicht Dataframes für diese Folien\n\n[]{.down100}\n\n| Name                    | Inhalt                                           |\n|-------------------------|--------------------------------------------------|\n| `d_ns_m`                | Monatswerte für Niederschläge in Bochum          |\n| `d_ns_m_2008`           | Monatswerte im Jahr 2008 (Bochum)                |\n| `d_ns_m_2010`           | Monatswerte im Jahr 2010 (Bochum)                |\n| `d_ns_m_0810`           | Monatswerte in den Jahren 2008 und 2010 (Bochum) |\n| `d_ns_m_nha_trang_2015` | Monatswerte der Niederschläge in Nha Trang 2015  |\n\nQuellen: <https://www.dwd.de> und <https://www.gso.gov.vn>\n\n\n# Kenngrößen von Verteilungen berechnen\n\n\n## Berechnung von Kenngrößen {.smaller}\n\n[]{.down40}\n\n### Lagemaße\n\n| Funktion    | Berechnet             |\n|-------------|-----------------------|\n| `mean(x)`   | Arithmetisches Mittel |\n| `median(x)` | Median                |\n\nKeine eingebauten Funktionen für Modus und geometrisches/harmonisches Mittel (selber definieren)\n\n[]{.down40}\n\n### Streumaße\n\n| Funktion          | Berechnet                                 |\n|-------------------|-------------------------------------------|\n| `max(x) - min(x)` | Spannweite $R$                            |\n| `var(x)`          | Empirische Varianz $\\tilde{s}^2$          |\n| `sd(x)`           | Empirische Standardabweichung $\\tilde{s}$ |\n\nVariationskoeffizient $v$ aus `sd(x)/mean(x)` berechnen, keine eingebaute Funktion für AD-Streuung\n\n\n## Spalten von Dataframes mit `$` {.smaller}\n\n### Dataframe\n\n::::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- tibble(\n  A = c(1, 2, 3, 4, 5, 6), \n  B = c(1, 2, 1, 2, 1, 2)\n)\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nkable(d)\n```\n\n::: {.cell-output-display}\n\n\n|  A|  B|\n|--:|--:|\n|  1|  1|\n|  2|  2|\n|  3|  1|\n|  4|  2|\n|  5|  1|\n|  6|  2|\n\n\n:::\n:::\n\n:::\n:::::\n\n### Auswahl der Spalten der beiden Merkmale\n\n::::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nd$A\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1 2 3 4 5 6\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nd$B\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1 2 1 2 1 2\n```\n\n\n:::\n:::\n\n:::\n:::::\n\n$\\rightarrow$ Merkmal `X` von Dataframe `d` als Array (hier Verweis zu Basics von R $\\rightarrow$ Was ist ein Array?) mit `d$X`\n\n\n## Kenngrößen für Merkmale {.smaller}\n\n::::: columns\n::: {.column width=\"50%\"}\n### Merkmal A\n\n#### Lagemaße\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(d$A)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3.5\n```\n\n\n:::\n\n```{.r .cell-code}\nmedian(d$A)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3.5\n```\n\n\n:::\n:::\n\n\n#### Streumaße\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmax(d$A) - min(d$A)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5\n```\n\n\n:::\n\n```{.r .cell-code}\nvar(d$A)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3.5\n```\n\n\n:::\n\n```{.r .cell-code}\nsd(d$A)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.870829\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n### Merkmal B\n\n#### Lagemaße\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(d$B)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.5\n```\n\n\n:::\n\n```{.r .cell-code}\nmedian(d$B)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.5\n```\n\n\n:::\n:::\n\n\n#### Streumaße\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmax(d$B) - min(d$B)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n\n```{.r .cell-code}\nvar(d$B)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.3\n```\n\n\n:::\n\n```{.r .cell-code}\nsd(d$B)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.5477226\n```\n\n\n:::\n:::\n\n:::\n:::::\n\n\n## Kenngrößen von *echten* Daten berechnen am Beispiel Niederschlag in Bochum {.smaller}\n\n### Beobachtungszeitraum: Spannweite von Merkmal `Jahr`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmax(d_ns_m$Jahr) - min(d_ns_m$Jahr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 86\n```\n\n\n:::\n:::\n\n\n### Mittelwert, Median und Standardabweichung\n\n::::: columns\n::: {.column width=\"50%\"}\n#### Im Jahr 2008\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(d_ns_m_2008$Niederschlag)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 72.45\n```\n\n\n:::\n\n```{.r .cell-code}\nmedian(d_ns_m_2008$Niederschlag)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 71.8\n```\n\n\n:::\n\n```{.r .cell-code}\nsd(d_ns_m_2008$Niederschlag)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 22.23447\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n#### Im Jahr 2010\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(d_ns_m_2010$Niederschlag)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 73.05\n```\n\n\n:::\n\n```{.r .cell-code}\nmedian(d_ns_m_2010$Niederschlag)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 70.15\n```\n\n\n:::\n\n```{.r .cell-code}\nsd(d_ns_m_2010$Niederschlag)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 46.71366\n```\n\n\n:::\n:::\n\n:::\n:::::\n\n(Zahlenwerte aus dem Skript)\n\n\n# Bestimmte Werte darstellen mit `geom_vline()` und `geom_hline()`\n\nvline wie vertical line = vertikale Linie und\n\nhline wie horizontal line = horizontale Linie\n\n\n## Minimalbeispiel (mit Dataframe)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- tibble(A = c(1, 2, 3), B = c(0, 4, 5))\nggplot(data = d) + \n  geom_hline(mapping = aes(yintercept = A)) + geom_vline(mapping = aes(xintercept = B))\n```\n\n::: {.cell-output-display}\n![](kenngrößen_files/figure-pdf/unnamed-chunk-13-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n- Schnittpunkte mit Achsen via `xintercept` bzw. `yintercept`\n\n\n## Minimalbeispiel (mit Zahlenwerten)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() + \n  geom_hline(yintercept = c(1, 2, 3)) + geom_vline(xintercept = c(0, 4, 5)) \n```\n\n::: {.cell-output-display}\n![](kenngrößen_files/figure-pdf/unnamed-chunk-14-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n- Werte können auch direkt angegeben werden (anstatt aus Dataframe)\n- Dann kein Mapping erforderlich\n\n\n## Bestimmte Werte bei *echten* Daten darstellen\n\n\n### Histogramm mit Mittelwert\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d_ns_m) +\n  geom_histogram(mapping = aes(x = Niederschlag), binwidth = 10, boundary = 0) +\n  geom_vline(xintercept = mean(d_ns_m$Niederschlag), color = 'red')\n```\n\n::: {.cell-output-display}\n![](kenngrößen_files/figure-pdf/unnamed-chunk-15-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n- Ohne `c(...)` wenn nur ein Wert dargestellt werden soll\n- Linienfarbe mit `color`\n\n##\n\n### Mit empirischer Verteilungsfunktion\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d_ns_m) +\n  geom_step(mapping = aes(x = Niederschlag), stat = \"ecdf\") +\n  geom_hline(yintercept = c(0.2, 0.5, 0.9), color = 'blue')\n```\n\n::: {.cell-output-display}\n![](kenngrößen_files/figure-pdf/unnamed-chunk-16-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n##\n\n### Monatsniederschläge mit Mittelwert\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=d_ns_m_0810) + \n  geom_hline(yintercept = mean(d_ns_m_0810$Niederschlag)) +\n  geom_line(mapping=aes(x=Monat,y=Niederschlag,group=Jahr,color=Jahr)) + \n  geom_point(mapping=aes(x=Monat, y=Niederschlag, color=Jahr))\n```\n\n::: {.cell-output-display}\n![](kenngrößen_files/figure-pdf/unnamed-chunk-17-1.pdf){fig-pos='H' width=80%}\n:::\n:::\n\n\n- 3 Layer übereinander, Reihenfolge beachten\n- Linien mit `geom_line()` (später im Detail, hier Verweis, wo zu finden)\n\n##\n\n### Abweichungen vom Mittelwert\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnmw <- mean(d_ns_m_0810$Niederschlag)\nggplot(data=d_ns_m_0810) + \n  geom_col(mapping = aes(x = Monat, y = Niederschlag - nmw, fill = Jahr))\n```\n\n::: {.cell-output-display}\n![](kenngrößen_files/figure-pdf/unnamed-chunk-18-1.pdf){fig-pos='H' width=80%}\n:::\n:::\n\n\n- Säulen nebeneinander mit `position = \"dodge\"`\n\n\n# Quantile berechnen mit `quantile()`\n\n\n## Funktion `quantile()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- tibble(X = c(1,2,2,4,4,6,6,6,9,10,10,12,13,13,13,16,17,18,19,20))\nquantile(d$X, probs = c(0.2, 0.25, 0.5, 0.9), type=2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n 20%  25%  50%  90% \n 4.0  5.0 10.0 18.5 \n```\n\n\n:::\n:::\n\n\n[]{.down40}\n\n### Funktionsweise\n\n- Gesuchte Quantilen mit `probs = c(...)` angeben\n- probs wie probabilities = Wahrscheinlichkeiten\n- Es gibt verschiedene Definitionen der Quantilwerte\n- Unsere Definition mit `type = 2`\n- Ergebnis ist ein *Named Vector* (Verweis Basics, was das bedeutet)\n\n## Quantile und empirische Verteilungsfunktion\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- c(0.2, 0.25, 0.5, 0.9)\nq <- quantile(d$X, p, type=2)\nggplot(data = d) +\n  geom_hline(yintercept = p,color = 'blue') + geom_vline(xintercept = q, color = 'red') +\n  geom_step(mapping = aes(x = X), stat = \"ecdf\") \n```\n\n::: {.cell-output-display}\n![](kenngrößen_files/figure-pdf/unnamed-chunk-20-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n- Werte und Quantile in Variablen `p` und `q`\n\n\n# Boxplots mit `geom_boxplot()` am Beispiel Niederschlag in Bochum\n\n\n## Monatliche Niederschläge (alle Jahre)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d_ns_m) +\n  geom_boxplot(mapping = aes(y = Niederschlag))\n```\n\n::: {.cell-output-display}\n![](kenngrößen_files/figure-pdf/unnamed-chunk-21-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n- Merkmal für y-Koordinate\n\n\n## Monatliche Niederschläge (Jahre 2008 und 2010)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d_ns_m_0810) +\n  geom_boxplot(mapping = aes(x = Jahr, y = Niederschlag))\n```\n\n::: {.cell-output-display}\n![](kenngrößen_files/figure-pdf/unnamed-chunk-22-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n- Mehrere Boxplots mit Angabe von Merkmal für x-Koordinate\n- Funktioniert nur für diskretes Merkmal (Details später, Verweis wo)\n\n\n## Monatliche Niederschläge (alle Jahre einzeln) 1/2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d_ns_m) +\n  geom_boxplot(mapping = aes(x = Jahr, y = Niederschlag))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Continuous x aesthetic\ni did you forget `aes(group = ...)`?\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](kenngrößen_files/figure-pdf/unnamed-chunk-23-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n### Warum funktioniert das nicht?\n\n- Merkmal `Jahr` jetzt mit vielen verschiedenen Ausprägungen\n- Für ggplot ist das dann ein kontinuierliches Merkmal\n- Angabe von `x` wird ignoriert, nur eine Box!\n\n\n## Monatliche Niederschläge (alle Jahre einzeln) 2/2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d_ns_m) +\n  geom_boxplot(mapping = aes(x = factor(Jahr), y = Niederschlag))\n```\n\n::: {.cell-output-display}\n![](kenngrößen_files/figure-pdf/unnamed-chunk-24-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n- Mit `factor(Jahr)` kennzeichnen, dass `Jahr` diskretes Merkmal\n\n\n# Lorenzkurve am Beispiel aus dem Skript\n\nAus dem Paket `ineq` (installieren)\n\n\n## Lorenzkurve berechnen\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- tibble(A = c(4, 4, 4, 4, 4), B = c(1, 1, 1, 1, 16), C = c(2, 3, 4, 5, 6))\nlc_A <- Lc(d$A)\nlc_B <- Lc(d$B)\nlc_C <- Lc(d$C)\n```\n:::\n\n\n- Funktion `Lc` aus Paket `ineq`\n\n## Ergebnis\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlc_B$p\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.0 0.2 0.4 0.6 0.8 1.0\n```\n\n\n:::\n\n```{.r .cell-code}\nlc_B$L\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.00 0.05 0.10 0.15 0.20 1.00\n```\n\n\n:::\n:::\n\n\n- Koordinaten $u_j$ mit `$p` und $v_j$ mit `$L`\n\n## Als Dataframe (Details später)\n\nFunktion um Ergebnis von `Lc` in Dataframe zu konvertieren\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlc_to_tibble <- function(lc) {\n  tibble(u = lc$p, v = lc$L)\n}\n```\n:::\n\n\nBeispiel\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkable(lc_to_tibble(lc_B))\n```\n\n::: {.cell-output-display}\n\n\n|   u|    v|\n|---:|----:|\n| 0.0| 0.00|\n| 0.2| 0.05|\n| 0.4| 0.10|\n| 0.6| 0.15|\n| 0.8| 0.20|\n| 1.0| 1.00|\n\n\n:::\n:::\n\n\n- Eigene Funktion um Dataframe aus Ergebnis von `Lc` zu erzeugen\n- Details hierzu später\n\n\n# Bänder mit `geom_ribbon()`\n\n- ribbon wie Band $\\rightarrow$ ein Flächenband zwischen zwei Linien\n\n\n## Minimalbeispiel 1/2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- tibble(A = c(1, 2, 3, 4), B = c(0, 0, 1, 2), C = c(3, 5, 6, 6))\nggplot(data = d) + geom_ribbon(mapping = aes(x = A, ymin = B, ymax = C))\n```\n\n::: {.cell-output-display}\n![](kenngrößen_files/figure-pdf/unnamed-chunk-29-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n- Plottet Bereich zwischen Wertepaaren\n\n\n## Minimalbeispiel 2/2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d) +\n  geom_ribbon(mapping = aes(x = A, ymax = C, ymin = 0))\n```\n\n::: {.cell-output-display}\n![](kenngrößen_files/figure-pdf/unnamed-chunk-30-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n- Es kann auch ein fester Wert angegeben werden\n- Anmerkung: Das geht auch mit anderen Geoms\n\n## Lorenzkurve Merkmal A (Skript S.45)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = lc_to_tibble(lc_A)) +\n  geom_ribbon(mapping = aes(x = u, ymin = v, ymax = u), color = 'black', fill = 'light blue') +\n  geom_point(mapping = aes(x = u, y = v))\n```\n\n::: {.cell-output-display}\n![](kenngrößen_files/figure-pdf/unnamed-chunk-31-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n- Farben mit `color` und `fill`\n\n## Lorenzkurve Merkmal B (Skript S.45)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = lc_to_tibble(lc_B)) +\n  geom_ribbon(mapping = aes(x = u, ymin = v, ymax = u), color = 'black', fill = 'linen') +\n  geom_point(mapping = aes(x = u, y = v))\n```\n\n::: {.cell-output-display}\n![](kenngrößen_files/figure-pdf/unnamed-chunk-32-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n- Farben mit `color` und `fill`\n\n## Lorenzkurve Merkmal C (Skript S.45)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = lc_to_tibble(lc_C)) +\n  geom_ribbon(mapping = aes(x = u, ymin = v, ymax = u), color = 'black', fill = 'linen') +\n  geom_point(mapping = aes(x = u, y = v))\n```\n\n::: {.cell-output-display}\n![](kenngrößen_files/figure-pdf/unnamed-chunk-33-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n- Farben mit `color` und `fill`\n\n## Lorenzkurven mit *echten* Daten\n\n### Niederschläge Bochum (2008)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlc_bochum <- Lc(d_ns_m_2008$Niederschlag)\nggplot(data = lc_to_tibble(lc_bochum)) +\n  geom_ribbon(mapping = aes(x = u, ymin = v, ymax = u), color = 'black', fill = 'linen') +\n  geom_point(mapping = aes(x = u, y = v))\n```\n\n::: {.cell-output-display}\n![](kenngrößen_files/figure-pdf/unnamed-chunk-34-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n##\n\n### Niederschläge Nha Trang (2015)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlc_nha_trang <- Lc(d_ns_m_nha_trang_2015$Niederschlag)\nggplot(data = lc_to_tibble(lc_nha_trang)) +\n  geom_ribbon(mapping = aes(x = u, ymin = v, ymax = u), color = 'black', fill = 'linen') +\n  geom_point(mapping = aes(x = u, y = v))\n```\n\n::: {.cell-output-display}\n![](kenngrößen_files/figure-pdf/unnamed-chunk-35-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n# Gini-Koeffizient\n\nWieder aus dem Paket `ineq` (jetzt installiert)\n\n## Minimalbeispiel\n\n\n::: {.cell}\n\n```{.r .cell-code}\nGini(c(0, 0, 0, 0, 1))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.8\n```\n\n\n:::\n\n```{.r .cell-code}\nGini(c(1, 1, 1, 2, 3))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.25\n```\n\n\n:::\n\n```{.r .cell-code}\nGini(c(1, 1, 1, 1, 1))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n\n```{.r .cell-code}\nGini(c(1, 1, 1, 1, 1))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n\n- Berechnung des Gini-Koeffizienten mit `Gini(<Werte>)`\n- Der Wert wird **nicht** normiert\n- Normierung auf $G^*$ falls notwendig mit Faktor `n/(n-1)`\n\n## Niederschläge\n\n### Gini-Koeffizienten Bochum und Nha Trang\n\n\n::: {.cell}\n\n```{.r .cell-code}\nGini(d_ns_m_2008$Niederschlag)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.1656315\n```\n\n\n:::\n\n```{.r .cell-code}\nGini(d_ns_m_nha_trang_2015$Niederschlag)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.7196082\n```\n\n\n:::\n:::\n\n\n[]{.down40}\n\n### Lorenz-Münzer-Koeffizienten Bochum und Nha Trang\n\n\n::: {.cell}\n\n```{.r .cell-code}\n12/11*Gini(d_ns_m_2008$Niederschlag)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.1806889\n```\n\n\n:::\n\n```{.r .cell-code}\n12/11*Gini(d_ns_m_nha_trang_2015$Niederschlag)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.7850271\n```\n\n\n:::\n:::\n\n\n# Zusammenfassung\n\n## Linien: `geom_hline()` & `geom_vline()`\n\n### Werte aus Dataframe\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d) + \n  geom_hline(mapping = aes(yintercept = <M>), Argumente) +\n  geom_vline(mapping = aes(xintercept = <M>), Argumente)\n```\n:::\n\n\n### Werte direkt angegeben\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() + \n  geom_hline(yintercept = c(...), Argumente) +\n  geom_vline(xintercept = c(...), Argumente)\n```\n:::\n\n\n| AES/Argumente | Beschreibung              | Optional |\n|---------------|---------------------------|----------|\n| xintercept    | Schnittpunkte mit x-Achse | Nein     |\n| yintercept    | Schnittpunkte mit y-Achse | Nein     |\n| color         | Linienfarbe               | Ja       |\n| size          | Linienstärke              | Ja       |\n\n: {tbl-colwidths=\"[20,50,30]\"}\n\n## Boxplots mit `geom_boxplot()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d) +\n  geom_boxplot(mapping = aes(x = <M>, y = <M>), Argumente)\n```\n:::\n\n\n[]{.down40}\n\n| AES | Beschreibung                         | Optional |\n|-----|--------------------------------------|----------|\n| x   | Merkmal für x-Achse (diskret)        | Ja       |\n| y   | Merkmal, das dargestellt werden soll | Nein     |\n\n: {tbl-colwidths=\"[20,50,30]\"}\n\n[]{.down40}\n\n| Argumente | Beschreibung                                           |\n|-----------|--------------------------------------------------------|\n| varwidth  | Breite entsprechend Anzahl Werte (TRUE oder **FALSE**) |\n\n: {tbl-colwidths=\"[20,80]\"}\n\n## Bänder mit `geom_ribbon()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = d) +\n  geom_ribbon(mapping = aes(x = <M>, ymin = <M>, ymax = <M>), Argumente)\n```\n:::\n\n\n| AES  | Beschreibung         | Optional |\n|------|----------------------|----------|\n| x    | Position auf x-Achse | Nein     |\n| ymin | Unterer Wert         | Nein     |\n| ymax | Oberer Wert          | Nein     |\n\n: {tbl-colwidths=\"[20,50,30]\"}\n\n[]{.down40}\n\n| Argumente | Beschreibung |\n|-----------|--------------|\n| color     | Linienfarbe  |\n| fill      | Füllfarbe    |\n\n: {tbl-colwidths=\"[20,80]\"}",
    "supporting": [
      "kenngrößen_files\\figure-pdf"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{\"knit_meta_id\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]}},\"value\":[{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"booktabs\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"longtable\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"array\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"multirow\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"wrapfig\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"float\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"colortbl\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"pdflscape\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"tabu\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"threeparttable\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"threeparttablex\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"ulem\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"normalem\"]},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"makecell\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"xcolor\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]}]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}